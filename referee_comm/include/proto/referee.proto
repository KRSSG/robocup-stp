syntax = "proto2";

import "game_event.proto";
message SSL_Referee{
	required uint64 packet_timestamp = 1;
	enum Stage {
		NORMAL_FIRST_HALF_PRE = 0;
		NORMAL_FIRST_HALF = 1;
		NORMAL_HALF_TIME = 2;
		NORMAL_SECOND_HALF_PRE = 3;
		NORMAL_SECOND_HALF = 4;
		EXTRA_TIME_BREAK = 5;
		EXTRA_FIRST_HALF_PRE = 6;
		EXTRA_FIRST_HALF = 7;
		EXTRA_HALF_TIME = 8;
		EXTRA_SECOND_HALF_PRE = 9;
		EXTRA_SECOND_HALF = 10;
		PENALTY_SHOOTOUT_BREAK = 11;
		PENALTY_SHOOTOUT = 12;
		POST_GAME = 13;
	}
	required Stage stage = 2;
	optional sint32 stage_time_left = 3;
	enum Command {
		HALT = 0;
		STOP = 1;
		NORMAL_START = 2;
		FORCE_START = 3;
		PREPARE_KICKOFF_YELLOW = 4;
		PREPARE_KICKOFF_BLUE = 5;
		PREPARE_PENALTY_YELLOW = 6;
		PREPARE_PENALTY_BLUE = 7;
		DIRECT_FREE_YELLOW = 8;
		DIRECT_FREE_BLUE = 9;
		INDIRECT_FREE_YELLOW = 10;
		INDIRECT_FREE_BLUE = 11;
		TIMEOUT_YELLOW = 12;
		TIMEOUT_BLUE = 13;
		GOAL_YELLOW = 14;
		GOAL_BLUE = 15;
		BALL_PLACEMENT_YELLOW = 16;
		BALL_PLACEMENT_BLUE = 17;
	}
	required Command command = 4;
	required uint32 command_counter = 5;
	required uint64 command_timestamp = 6;
	message TeamInfo {
		required string name = 1;
		required uint32 score = 2;
		required uint32 red_cards = 3;
		repeated uint32 yellow_card_times = 4 [packed=true];
		required uint32 yellow_cards = 5;
		required uint32 timeouts = 6;
		required uint32 timeout_time = 7;
		required uint32 goalie = 8;
	}
	required TeamInfo yellow = 7;
	required TeamInfo blue = 8;
	message Point {
		required float x = 1;
		required float y = 2;
	}
	optional Point designated_position = 9;
	optional bool blueTeamOnPositiveHalf = 10;
	optional SSL_Referee_Game_Event gameEvent = 11;
}
